local a=require('data.min')local b=require('battery.min')local c=require('camera.min')TAKE_PHOTO_MSG=0x0d;TEXT_MSG=0x0a;function parse_take_photo(a)local d={10,25,50,100}local e={'SPOT','CENTER_WEIGHTED','AVERAGE'}local f={}f.quality=d[string.byte(a,1)+1]f.auto_exp_gain_times=string.byte(a,2)f.metering_mode=e[string.byte(a,3)+1]f.exposure=(string.byte(a,4)-128)/64.0;f.shutter_kp=string.byte(a,5)/10.0;f.shutter_limit=string.byte(a,6)<<8|string.byte(a,7)f.gain_kp=string.byte(a,8)/10.0;f.gain_limit=string.byte(a,9)return f end;function parse_text(a)return a end;a.parsers[TAKE_PHOTO_MSG]=parse_take_photo;a.parsers[TEXT_MSG]=parse_text;function clear_display()frame.display.text(" ",1,1)frame.display.show()frame.sleep(0.04)end;function print_text(g)local h=0;for i in g:gmatch("([^\n]*)\n?")do if i~=""then frame.display.text(i,1,h*60+1)h=h+1 end end;frame.display.show()end;function app_loop()local j=0;clear_display()while true do local k=a.process_raw_items()if k>0 then if a.app_data[TAKE_PHOTO_MSG]~=nil then rc,err=pcall(c.camera_capture_and_send,a.app_data[TAKE_PHOTO_MSG])if rc==false then print(err)end end;if a.app_data[TEXT_MSG]~=nil then clear_display()print_text(a.app_data[TEXT_MSG])end end;j=b.send_batt_if_elapsed(j,120)frame.sleep(0.1)end end;app_loop()